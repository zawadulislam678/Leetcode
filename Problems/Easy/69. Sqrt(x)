//https://leetcode.com/problems/sqrtx/
class Solution {
public:

long long int binarySearch(int n)
{
  int s = 0;
  int e = n;
  int ans = -1;
  long long int mid = (s+e)/2;  // mid = s + (e-s)/2; for (2^31)-1 //if long long int not used the code will be overflow
  while(s<=e)
  {
        long long int square = mid*mid;
        if(square==n)
        {
            return mid;
        }
        if(square<n)
        {
            ans = mid;
            s=mid+1;
        }
        else
        {
            e=mid-1;
        }
        mid = (s+e)/2;
  }
   return ans;
}
    int mySqrt(int x) {
        return binarySearch(x);
    }
};
